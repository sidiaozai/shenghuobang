package com.example.shenghuobang.Setting;



import org.json.JSONException;
import org.json.JSONObject;

import com.avos.avoscloud.AVException;
import com.avos.avoscloud.AVOSCloud;
import com.avos.avoscloud.AVObject;
import com.avos.avoscloud.AVUser;
import com.avos.avoscloud.SaveCallback;
import com.example.shenghuobang.R;
import com.tencent.connect.UserInfo;
import com.tencent.connect.auth.QQAuth;
import com.tencent.tauth.IUiListener;
import com.tencent.tauth.Tencent;
import com.tencent.tauth.UiError;

import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.widget.Toast;


public class UpdateDataActivity extends Activity {
	
	private  SaveCallback saveCallback;
	private SpringProgressView progressView;
	private Handler mHandler;
	
	private sqliteDataBase.Bll.Charge bllCharge;
	private sqliteDataBase.Bll.Unforget bllUnforget;
	private sqliteDataBase.Bll.Password bllPassword;
	
	private AVObject ChargeObject = new AVObject("Charge");
	private AVObject UnforgetObject = new AVObject("Unforget");
	private AVObject PasswordObject = new AVObject("Password");
	
	private Tencent mTencent;
	private String openID;
	
	int counts;
	int count=0;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		setContentView(R.layout.activity_update_data);
		
		Log.i("UpdateDataActivity", "UpdateDataActivity----->");
		
		bllCharge = new sqliteDataBase.Bll.Charge(UpdateDataActivity.this);
		bllUnforget = new sqliteDataBase.Bll.Unforget(UpdateDataActivity.this);
		bllPassword = new sqliteDataBase.Bll.Password(UpdateDataActivity.this);

//		ChargeObject.deleteInBackground();
//		ChargeObject.saveInBackground();
//		UnforgetObject.deleteInBackground();
//		ChargeObject.saveInBackground();
//		PasswordObject.deleteInBackground();
//		ChargeObject.saveInBackground();
		
		
		counts = bllCharge.getCount()+ bllUnforget.getCount()+ bllPassword.getCount();
		
		
		//AVOSCloud.initialize(this, "qcrjy7s8b5vforciw86pptxnhypnyt5n67yyrwnty2f2vcj4", "udpajg0bbynronjwfzqcvyfk4kfc6ccjbluzamo9u6gdmdhb");
		AVOSCloud.initialize(this, "373e6p8ql6fj8hr43us5lc2e4h6dnfx8jyeo0lngv1pu0w3z", "mvb1u0hyyibxw0optlpxxz68zmxftcpst11t76anezncp35i");
		progressView = (SpringProgressView) findViewById(R.id.spring_progress_view);
		Log.i("UpdateDataActivity", "UpdateDataActivity----->1");
		progressView.setMaxCount(counts);
		Log.i("UpdateDataActivity", "UpdateDataActivity----->"+counts);
		saveCallback = new SaveCallback() {
			
			@Override
			public void done(AVException arg0) {
				count++;
				Log.i("UpdateDataActivity", ""+count);
				progressView.setCurrentCount(count);
				
				if(count>=counts){
					
	        		Toast.makeText(getApplicationContext(), "同步数据完成,", Toast.LENGTH_SHORT).show();
	        		AVUser currentUser = AVUser.getCurrentUser();
	        		if (currentUser != null) {
	        			Toast.makeText(getApplicationContext(), currentUser.getUsername(), Toast.LENGTH_SHORT).show();
	        		} else {
	        			Toast.makeText(getApplicationContext(), "没有用户", Toast.LENGTH_SHORT).show();
	        		}
	        		finish();
	        	}
				
			}
		};
		Log.i("UpdateDataActivity", ""+count);
		login();
        
	}
	public void login(){
		
		mTencent = Tencent.createInstance("1103828316", this.getApplicationContext());
		if (!mTencent.isSessionValid()){
			
			//mTencent.loginWithOEM(arg0, arg1, arg2, arg3, arg4, arg5)
			mTencent.login(this, "all", new IUiListener() {

				@Override
				public void onCancel() {
					// TODO 自动生成的方法存根
					
				}

				@Override
				public void onComplete(Object arg0) {
					JSONObject userinfo = (JSONObject) arg0;

					try {
						openID = userinfo.getString("openid");
						updateCharge();
				        updateUnforget();
				        updatePassword();
				        
					} catch (JSONException e) {
						// TODO 自动生成的 catch 块
						e.printStackTrace();
					}

					
				}

				@Override
				public void onError(UiError arg0) {
					// TODO 自动生成的方法存根
					
				}

			} );
		}
	}
	public void logout(){
		mTencent.logout(this);
	}
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		mTencent.onActivityResult(requestCode, resultCode, data);
	}
	
	private void updateCharge(){
		Cursor cursor = bllCharge.query();
		while(cursor.moveToNext()){
			
			AVObject text = new AVObject("Charge");
			ChargeObject =  new AVObject("Charge");
			int idIndex = cursor.getColumnIndex("id");
    		int yearIndex = cursor.getColumnIndex("year");
    		int monthIndex = cursor.getColumnIndex("month");
    		int dayIndex = cursor.getColumnIndex("day");
    		
    		int typeIndex = cursor.getColumnIndex("type");
    		int sumIndex = cursor.getColumnIndex("sum");
    		int desIndex = cursor.getColumnIndex("des");
    		
    		int id = cursor.getInt(idIndex);

    		int year = cursor.getInt(yearIndex);
    		int month = cursor.getInt(monthIndex);
    		int day = cursor.getInt(dayIndex);
    		
    		Double sum = cursor.getDouble(sumIndex);
    		int type = cursor.getInt(typeIndex);
    		String des = cursor.getString(desIndex);
    		
    		text.put("chargeID", id);
    		text.put("year", year);
    		text.put("month", month);
    		text.put("day", day);
    		text.put("type", type);
    		text.put("sum", sum);
    		text.put("des", des);
    		
    		ChargeObject.put("Charge", text);
    		ChargeObject.saveInBackground(saveCallback);
		}
	}
	private void updateUnforget(){
		Cursor cursor = bllUnforget.query();
		while(cursor.moveToNext()){
			
			AVObject text = new AVObject("Unforget");
			UnforgetObject = new AVObject("Unforget");
			int id;
			int year,month,day;
			int hour,minute,second;
			String name;
			String soundFileName;
			
			int idIndex = cursor.getColumnIndex("id");
    		int yearIndex = cursor.getColumnIndex("year");
    		int monthIndex = cursor.getColumnIndex("month");
    		int dayIndex = cursor.getColumnIndex("day");
    		int hourIndex = cursor.getColumnIndex("hour");
    		int minuteIndex = cursor.getColumnIndex("minute");
    		int secondIndex = cursor.getColumnIndex("second");
    		int nameIndex = cursor.getColumnIndex("name");
    		int soundFileNameIndex = cursor.getColumnIndex("soundFileName");
    		
    		id = cursor.getInt(idIndex);
    		year = cursor.getInt(yearIndex);
    		month = cursor.getInt(monthIndex);
    		day = cursor.getInt(dayIndex);
    		hour = cursor.getInt(hourIndex);
    		minute = cursor.getInt(minuteIndex);
    		second = cursor.getInt(secondIndex);
    		name = cursor.getString(nameIndex);
    		soundFileName = cursor.getString(soundFileNameIndex);
    		
    		
    		text.put("unforgetID", id);
    		text.put("year", year);
    		text.put("month", month);
    		text.put("day", day);
    		text.put("hour", hour);
    		text.put("minute", minute);
    		text.put("second", second);
    		text.put("name", name);
    		text.put("soundFileName", soundFileName);
    		
    		UnforgetObject.put("Unforget", text);
    		

    		UnforgetObject.saveInBackground(saveCallback);
		}
	}
	private void updatePassword(){
		Cursor cursor = bllPassword.query();
		while(cursor.moveToNext()){
			
			AVObject text = new AVObject("Password");
			PasswordObject = new AVObject("Password");
			int id;
			String name;
			String password;
			String soundFileName;
			
			int idIndex =  cursor.getColumnIndex("id");
    		int nameIndex = cursor.getColumnIndex("name");
    		int passwordIndex = cursor.getColumnIndex("passWord");
    		int soundFileNameIndex = cursor.getColumnIndex("soundFileName");
    		
    		id = cursor.getInt(idIndex);
    		name = cursor.getString(nameIndex);
    		password = cursor.getString(passwordIndex);
    		soundFileName = cursor.getString(soundFileNameIndex);
    		
    		
    		text.put("passwordID", id);
    		text.put("name", name);
    		text.put("password", password);
    		text.put("soundFileName", soundFileName);
    		
    		PasswordObject.put("Password", text);

    		PasswordObject.saveInBackground(saveCallback);
		}
	}
//	private void  updateCharge(){
//		Cursor cursor = bllCharge.query();
//		while(cursor.moveToNext()){
//			
//			ChargeObject = new AVObject("Charge");
//			int idIndex = cursor.getColumnIndex("id");
//    		int yearIndex = cursor.getColumnIndex("year");
//    		int monthIndex = cursor.getColumnIndex("month");
//    		int dayIndex = cursor.getColumnIndex("day");
//    		
//    		int typeIndex = cursor.getColumnIndex("type");
//    		int sumIndex = cursor.getColumnIndex("sum");
//    		int desIndex = cursor.getColumnIndex("des");
//    		
//    		int id = cursor.getInt(idIndex);
//
//    		int year = cursor.getInt(yearIndex);
//    		int month = cursor.getInt(monthIndex);
//    		int day = cursor.getInt(dayIndex);
//    		
//    		int sum = cursor.getInt(sumIndex);
//    		int type = cursor.getInt(typeIndex);
//    		String des = cursor.getString(desIndex);
//    		
//    		ChargeObject.put("chargeID", id);
//    		ChargeObject.put("year", year);
//    		ChargeObject.put("month", month);
//    		ChargeObject.put("day", day);
//    		ChargeObject.put("type", type);
//    		ChargeObject.put("sum", sum);
//    		ChargeObject.put("des", des);
//
//    		ChargeObject.saveInBackground(saveCallback);
//		}
//	}
//	private void updateUnforget(){
//		Cursor cursor = bllUnforget.query();
//		while(cursor.moveToNext()){
//			
//			UnforgetObject = new AVObject("Unforget");
//			
//			int id;
//			int year,month,day;
//			int hour,minute,second;
//			String name;
//			String soundFileName;
//			
//			int idIndex = cursor.getColumnIndex("id");
//    		int yearIndex = cursor.getColumnIndex("year");
//    		int monthIndex = cursor.getColumnIndex("month");
//    		int dayIndex = cursor.getColumnIndex("day");
//    		int hourIndex = cursor.getColumnIndex("hour");
//    		int minuteIndex = cursor.getColumnIndex("minute");
//    		int secondIndex = cursor.getColumnIndex("second");
//    		int nameIndex = cursor.getColumnIndex("name");
//    		int soundFileNameIndex = cursor.getColumnIndex("soundFileName");
//    		
//    		id = cursor.getInt(idIndex);
//    		year = cursor.getInt(yearIndex);
//    		month = cursor.getInt(monthIndex);
//    		day = cursor.getInt(dayIndex);
//    		hour = cursor.getInt(hourIndex);
//    		minute = cursor.getInt(minuteIndex);
//    		second = cursor.getInt(secondIndex);
//    		name = cursor.getString(nameIndex);
//    		soundFileName = cursor.getString(soundFileNameIndex);
//    		
//    		
//    		UnforgetObject.put("unforgetID", id);
//    		UnforgetObject.put("year", year);
//    		UnforgetObject.put("month", month);
//    		UnforgetObject.put("day", day);
//    		UnforgetObject.put("hour", hour);
//    		UnforgetObject.put("minute", minute);
//    		UnforgetObject.put("second", second);
//    		UnforgetObject.put("name", name);
//    		UnforgetObject.put("soundFileName", soundFileName);
//
//    		UnforgetObject.saveInBackground(saveCallback);
//		}
//		
//	}
//	private void updatePassword(){
//		Cursor cursor = bllPassword.query();
//		while(cursor.moveToNext()){
//			
//			PasswordObject = new AVObject("Password");
//			
//			int id;
//			String name;
//			String password;
//			String soundFileName;
//			
//			int idIndex =  cursor.getColumnIndex("id");
//    		int nameIndex = cursor.getColumnIndex("name");
//    		int passwordIndex = cursor.getColumnIndex("passWord");
//    		int soundFileNameIndex = cursor.getColumnIndex("soundFileName");
//    		
//    		id = cursor.getInt(idIndex);
//    		name = cursor.getString(nameIndex);
//    		password = cursor.getString(passwordIndex);
//    		soundFileName = cursor.getString(soundFileNameIndex);
//    		
//    		
//    		PasswordObject.put("passwordID", id);
//    		PasswordObject.put("name", name);
//    		PasswordObject.put("password", password);
//    		PasswordObject.put("soundFileName", soundFileName);
//
//    		PasswordObject.saveInBackground(saveCallback);
//		}
//	}
}