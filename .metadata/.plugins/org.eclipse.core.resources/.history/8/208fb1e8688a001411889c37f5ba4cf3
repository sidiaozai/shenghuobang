package com.example.shenghuobang.Setting;

import java.io.IOException;
import java.net.MalformedURLException;
import java.net.SocketTimeoutException;

import org.apache.http.conn.ConnectTimeoutException;
import org.json.JSONException;
import org.json.JSONObject;

import com.tencent.open.HttpStatusException;
import com.tencent.open.NetworkUnavailableException;
import com.tencent.tauth.IRequestListener;

public class BaseApiListener implements IRequestListener {
	@Override
	public void onComplete(final JSONObject response, Object state) {
//	showResult("IRequestListener.onComplete:", response.toString());
	doComplete(response, state);
	}
	protected void doComplete(JSONObject response, Object state) {
	}
	@Override
	public void onIOException(final IOException e, Object state) {
//	showResult("IRequestListener.onIOException:", e.getMessage());
	}
	@Override
	public void onMalformedURLException(final MalformedURLException e,
	Object state) {
//	showResult("IRequestListener.onMalformedURLException", e.toString());
	}
	@Override
	public void onJSONException(final JSONException e, Object state) {
//	showResult("IRequestListener.onJSONException:", e.getMessage());
	}
	@Override
	public void onConnectTimeoutException(ConnectTimeoutException arg0,
	Object arg1) {
	// TODO Auto-generated method stub
	}
	@Override
	public void onSocketTimeoutException(SocketTimeoutException arg0,
	Object arg1) {
	// TODO Auto-generated method stub
	}
	//1.4版本中IRequestListener 新增两个异常
	@Override
	public void onNetworkUnavailableException(NetworkUnavailableException e, Object state){
	// 当前网络不可用时触发此异常
	}
	@Override
	public void onHttpStatusException(HttpStatusException e, Object state) {
	// http请求返回码非200时触发此异常
	}
	public void onUnknowException(Exception e, Object state) {
	// 出现未知错误时会触发此异常
	}
	}
